# MongoDB database
# Change DATABASE_HOST if you run mongodb from the web
# https://www.mongodb.com/resources/products/fundamentals/mongodb-cluster-setup
DATABASE_HOST="mongodb://host.docker.internal/27017"

# Qdrant vector database
# USE_QDRANT_CLOUD="False" if you setup the qdrant docker container(docker compose)
# USE_QDRANT_CLOUD="True" if you run qdrant from the web
USE_QDRANT_CLOUD="False"
# Change QDRANT_CLOUD_URL and fill out QDRANT_APIKEY if you run qdrant from the web
# https://qdrant.tech/documentation/cloud/create-cluster/
QDRANT_CLOUD_URL="host.docker.internal:6333"
QDRANT_APIKEY=your_qdrant_apikey


# Ollama
# USE_DOCKER="True" if you setup the ollama docker container(docker compose)
# USE_DOCKER="False" if you run ollama serve from command line
USE_DOCKER="True"

# ClearML(optional for running files in ClearML folder)
# https://clear.ml/docs/latest/docs/clearml_serving/clearml_serving_setup/
CLEARML_WEB_HOST=your_clearml_web_host(link)
CLEARML_API_HOST=your_clearml_api_host(link)
CLEARML_FILES_HOST=your_clearml_files_host(link)
CLEARML_API_ACCESS_KEY=your_clearml_api_access_key(str)
CLEARML_API_SECRET_KEY=your_clearml_api_secret_key(str)

# --- OpenAI is not used for this project(optional), but a function to pull the model is given. ---

# OpenAI API Config(unused)
# https://platform.openai.com/api-keys
OPENAI_MODEL_ID=gpt-4o-mini
OPENAI_API_KEY=your_openai_api_key

# Huggingface API Config(unused)
# https://huggingface.co/docs/hub/en/security-tokens
HUGGINGFACE_ACCESS_TOKEN=your_huggingface_access_token